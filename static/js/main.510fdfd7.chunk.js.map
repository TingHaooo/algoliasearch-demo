{"version":3,"sources":["pages/searchWithFavorite/Button.tsx","pages/searchWithFavorite/Item.tsx","pages/searchWithFavorite/Favorite.tsx","hooks/useAlgoArticles.ts","pages/searchWithFavorite/Search.tsx","components/Tab.tsx","components/TabLists.tsx","components/TabPenel.tsx","components/TabPanels.tsx","pages/searchWithFavorite/index.tsx","Routes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Button","props","handleButtonClick","isActive","children","onClick","style","backgroundColor","color","border","undefined","padding","borderRadius","cursor","Item","data","button","borderBottom","display","justifyContent","alignItems","fontWeight","title","marginTop","marginRight","fontSize","author_name","flexWrap","categories","map","categorie","marginLeft","FavoriteItem","favorite","useState","isHover","setIsHover","onMouseEnter","onMouseLeave","objectID","Favorite","favorites","useAlgoArticles","index","useContext","algoContext","setData","loading","setLoading","error","setError","refetch","queryString","a","search","attributesToRetrieve","hitsPerPage","hits","SearchItem","isInFavorites","includes","Search","setSearch","Subject","onSearch$","useEffect","subscription","pipe","debounceTime","distinctUntilChanged","subscribe","s","unsubscribe","placeholder","width","value","onChange","e","target","next","length","article","Tab","handleOnClick","isCur","TabList","height","TabPanel","position","top","left","TabPanels","Index","history","useHistory","location","useLocation","setFavorites","id","filter","handleSave","push","pathname","Routes","exact","path","render","to","component","SearchWithFavorite","algoliasearch","process","initIndex","createContext","AlgoProvider","Provider","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.510fdfd7.chunk.js","sourcesContent":["import { ReactNode } from \"react\";\n\ninterface IButtonProps {\n  handleButtonClick: () => void;\n  isActive: boolean;\n  children: ReactNode;\n}\n\nconst Button = (props: IButtonProps) => {\n  const { handleButtonClick, isActive, children } = props;\n\n  return (\n    <div\n      onClick={handleButtonClick}\n      style={{\n        backgroundColor: isActive ? \"white\" : \"#999\",\n        color: isActive ? \"black\" : \"white\",\n        border: isActive ? \"1px solid black\" : undefined,\n        padding: isActive ? \"5px\" : \"3px\",\n        borderRadius: \"5px\",\n        cursor: \"pointer\",\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Button;\n","import { ReactNode } from \"react\";\nimport { IArticle } from \"../../hooks/useAlgoArticles\";\ninterface IItemProps {\n  data: IArticle;\n  button: ReactNode;\n}\n\nconst Item = (props: IItemProps) => {\n  const { data, button } = props;\n  return (\n    <div\n      style={{\n        borderBottom: \"1px solid black\",\n        padding: \"10px 0px\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <div>\n          <div style={{ fontWeight: \"bold\" }}>{data.title}</div>\n          <div\n            style={{ marginTop: \"10px\", display: \"flex\", alignItems: \"center\" }}\n          >\n            <div style={{ marginRight: \"10px\", fontSize: \"12px\" }}>\n              {data.author_name}\n            </div>\n            <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n              {data.categories.map((categorie) => (\n                <div\n                  key={categorie}\n                  style={{\n                    marginTop: \"3px\",\n                    marginLeft: \"8px\",\n                    padding: \"3px\",\n                    backgroundColor: \"#888\",\n                    borderRadius: \"2px\",\n                    color: \"white\",\n                  }}\n                >\n                  {categorie}\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n        {button}\n      </div>\n    </div>\n  );\n};\n\nexport default Item;\n","import { useState } from \"react\";\nimport { IArticle } from \"../../hooks/useAlgoArticles\";\nimport Button from \"./Button\";\nimport Item from \"./Item\";\n\ninterface IFavoriteItemProps {\n  favorite: IArticle;\n  handleButtonClick: (data: IArticle) => void;\n}\n\nexport const FavoriteItem = (props: IFavoriteItemProps) => {\n  const { favorite, handleButtonClick } = props;\n  const [isHover, setIsHover] = useState(false);\n\n  return (\n    <div\n      onMouseEnter={() => setIsHover(true)}\n      onMouseLeave={() => setIsHover(false)}\n    >\n      <Item\n        data={favorite}\n        key={favorite.objectID}\n        button={\n          <Button\n            isActive={isHover}\n            handleButtonClick={() => handleButtonClick(favorite)}\n          >\n            {isHover ? \"Unsave\" : \"Saved\"}\n          </Button>\n        }\n      ></Item>\n    </div>\n  );\n};\n\ninterface IFavoriteProps {\n  favorites: IArticle[];\n  handleButtonClick: (article: IArticle) => void;\n}\n\nconst Favorite = (props: IFavoriteProps) => {\n  const { favorites, handleButtonClick } = props;\n  return (\n    <div>\n      {favorites.map((favorite) => (\n        <FavoriteItem\n          key={favorite.objectID}\n          favorite={favorite}\n          handleButtonClick={handleButtonClick}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Favorite;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useState, useContext } from \"react\"\nimport { algoContext } from \"../App\"\n\ntype Maybe<T> = T |undefined\n\nexport interface IArticle {\n  author_name: string;\n  categories: string[];\n  objectID: string;\n  title: string;\n}\n\nconst useAlgoArticles = <T>() => {\n\n  const { index } = useContext(algoContext)\n  const [data, setData] = useState<Maybe<T>>(undefined)\n  const [loading, setLoading] = useState<boolean>(false)\n  const [error, setError] = useState<Maybe<Error>>(undefined)\n\n  const fetchData = async (queryString: string) => {\n    setLoading(true)\n    setError(undefined)\n    try {\n      const { hits } = await index.search<T>(queryString, {\n        attributesToRetrieve: ['title', 'categories', 'author_name'],\n        hitsPerPage: 50,\n      })\n      setData(hits as any)\n    } catch (e) {\n      setError(e)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return {\n    data,\n    loading,\n    error,\n    refetch: fetchData\n  }\n}\n\nexport default useAlgoArticles","import { ChangeEvent, useEffect, useState } from \"react\";\nimport Item from \"./Item\";\nimport { useAlgoArticles } from \"../../hooks\";\nimport { IArticle } from \"../../hooks/useAlgoArticles\";\nimport Button from \"./Button\";\nimport { Subject } from \"rxjs\";\nimport { debounceTime, distinctUntilChanged } from \"rxjs/operators\";\n\ninterface ISearchItemProps {\n  favorites: IArticle[];\n  data: IArticle;\n  handleButtonClick: (data: IArticle) => void;\n}\n\nexport const SearchItem = (props: ISearchItemProps) => {\n  const { data, handleButtonClick, favorites } = props;\n  const [isHover, setIsHover] = useState(false);\n  const isInFavorites = favorites\n    .map((favorite) => favorite.objectID)\n    .includes(data.objectID);\n\n  return (\n    <div\n      onMouseEnter={() => setIsHover(true)}\n      onMouseLeave={() => setIsHover(false)}\n    >\n      <Item\n        data={data}\n        key={data.objectID}\n        button={\n          isInFavorites ? (\n            <Button\n              isActive={isHover}\n              handleButtonClick={() => handleButtonClick(data)}\n            >\n              {isHover ? \"Unsave\" : \"Saved\"}\n            </Button>\n          ) : isHover ? (\n            <Button\n              isActive={true}\n              handleButtonClick={() => handleButtonClick(data)}\n            >\n              Save\n            </Button>\n          ) : (\n            <></>\n          )\n        }\n      ></Item>\n    </div>\n  );\n};\n\ninterface ISearchProps {\n  handleButtonClick: (article: IArticle) => void;\n  favorites: IArticle[];\n}\n\nconst Search = (props: ISearchProps) => {\n  const { handleButtonClick, favorites } = props;\n  const [search, setSearch] = useState(\"\");\n  const { data, error, loading, refetch } = useAlgoArticles<IArticle[]>();\n  const [onSearch$] = useState(() => new Subject<string>());\n\n  const handleOnChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n    onSearch$.next(e.target.value);\n  };\n\n  useEffect(() => {\n    const subscription = onSearch$\n      .pipe(debounceTime(400), distinctUntilChanged())\n      .subscribe((s: string) => refetch(s));\n\n    return () => subscription.unsubscribe();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (error) {\n    return <div>{\"Something went wrong :_(\"}</div>;\n  }\n\n  return (\n    <div>\n      <input\n        placeholder=\"Please enter the keyword\"\n        style={{ width: \"200px\", padding: \"3px 5px\" }}\n        value={search}\n        onChange={handleOnChange}\n      ></input>\n      {loading && <div style={{ marginTop: \"15px\" }}>Loading...</div>}\n      {!data?.length && !loading && (\n        <div style={{ marginTop: \"10px\" }}>No result</div>\n      )}\n      {!!data?.length && !loading && (\n        <div>\n          {data.map((article) => (\n            <SearchItem\n              data={article}\n              key={article.objectID}\n              favorites={favorites}\n              handleButtonClick={handleButtonClick}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Search;\n","import { ReactNode } from \"react\";\n\ninterface ITabProps {\n  handleOnClick: () => void;\n  isCur: boolean;\n  children: ReactNode;\n}\n\nconst Tab = (props: ITabProps) => {\n  const { handleOnClick, isCur, children } = props;\n\n  return (\n    <div>\n      <div\n        onClick={handleOnClick}\n        style={{\n          marginLeft: \"10px\",\n          padding: \"10px\",\n          color: isCur ? \"black\" : \"#333\",\n          backgroundColor: isCur ? \"white\" : \"#666\",\n          borderRadius: \"3px 3px 0px 0px\",\n          cursor: \"pointer\",\n        }}\n      >\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Tab;\n","import { ReactNode } from \"react\";\n\nconst TabList = ({ children }: { children: ReactNode }) => {\n  return (\n    <>\n      <div\n        style={{\n          backgroundColor: \"#666\",\n          height: \"60px\",\n          display: \"flex\",\n          alignItems: \"flex-end\",\n        }}\n      >\n        {children}\n      </div>\n    </>\n  );\n};\n\nexport default TabList;\n","import { ReactNode } from \"react\";\n\ninterface ITabPanelProps {\n  children: ReactNode;\n  isCur: boolean;\n}\n\nconst TabPanel = (props: ITabPanelProps) => {\n  const { isCur, children } = props;\n\n  return (\n    <div style={{ position: \"relative\" }}>\n      <div\n        style={{\n          position: \"absolute\",\n          top: \"0px\",\n          left: isCur ? \"0px\" : \"-100000000px\",\n          width: \"100%\",\n        }}\n      >\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default TabPanel;\n","import { ReactNode } from \"react\";\n\nconst TabPanels = ({ children }: { children: ReactNode }) => {\n  return (\n    <div style={{ marginTop: \"20px\", padding: \" 0 20px\" }}>{children}</div>\n  );\n};\n\nexport default TabPanels;\n","import Favorite from \"./Favorite\";\nimport Search from \"./Search\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { IArticle } from \"../../hooks/useAlgoArticles\";\nimport { TabList, Tab, TabPanel, TabPanels } from \"../../components\";\n\nconst Index = () => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const [favorites, setFavorites] = useState<IArticle[]>([]);\n\n  const handleUnsave = (id: string) => {\n    setFavorites((favorites) =>\n      favorites.filter((favorite) => favorite.objectID !== id)\n    );\n  };\n\n  const handleSave = (article: IArticle) => {\n    setFavorites((favorites) => [...favorites, article]);\n  };\n\n  const handleButtonClick = (article: IArticle) => {\n    const isInFavorites = favorites\n      .map((favorite) => favorite.objectID)\n      .includes(article.objectID);\n    if (isInFavorites) {\n      handleUnsave(article.objectID);\n      return;\n    }\n\n    handleSave(article);\n  };\n\n  return (\n    <>\n      <TabList>\n        <Tab\n          handleOnClick={() => history.push(\"/algoliasearch-demo/search\")}\n          isCur={location.pathname === \"/algoliasearch-demo/search\"}\n        >\n          Search\n        </Tab>\n        <Tab\n          handleOnClick={() => history.push(\"/algoliasearch-demo/favorite\")}\n          isCur={location.pathname === \"/algoliasearch-demo/favorite\"}\n        >\n          Favorite\n        </Tab>\n      </TabList>\n      <TabPanels>\n        <TabPanel isCur={location.pathname === \"/algoliasearch-demo/search\"}>\n          <Search handleButtonClick={handleButtonClick} favorites={favorites} />\n        </TabPanel>\n        <TabPanel isCur={location.pathname === \"/algoliasearch-demo/favorite\"}>\n          <Favorite\n            favorites={favorites}\n            handleButtonClick={handleButtonClick}\n          />\n        </TabPanel>\n      </TabPanels>\n    </>\n  );\n};\n\nexport default Index;\n","import { SearchWithFavorite } from \"./pages\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nconst Routes = () => {\n  return (\n    <div>\n      <Switch>\n        <Route\n          exact\n          path=\"/algoliasearch-demo\"\n          render={() => <Redirect to=\"/algoliasearch-demo/search\" />}\n        />\n        <Route\n          exact\n          path={[\"/algoliasearch-demo/search\", \"/algoliasearch-demo/favorite\"]}\n          component={SearchWithFavorite}\n        />\n      </Switch>\n    </div>\n  );\n};\n\nexport default Routes;\n","import { BrowserRouter } from \"react-router-dom\";\nimport Routes from \"./Routes\";\nimport algoliasearch, { SearchIndex } from \"algoliasearch\";\nimport { createContext } from \"react\";\n\nconst client = algoliasearch(\n  process.env.REACT_APP_ALGOLIA_APLICATION_ID as string,\n  process.env.REACT_APP_ALGOLIA_APLICATION_KEY as string\n);\nconst index = client.initIndex(\n  process.env.REACT_APP_ALGOLIA_INDEX_NAME as string\n);\n\nexport type AlgoContext = {\n  index: SearchIndex;\n};\n\nexport const algoContext = createContext<AlgoContext>({\n  index,\n});\n\nconst AlgoProvider = algoContext.Provider;\n\nconst App = () => {\n  return (\n    <AlgoProvider value={{ index }}>\n      <BrowserRouter>\n        <Routes />\n      </BrowserRouter>\n    </AlgoProvider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}